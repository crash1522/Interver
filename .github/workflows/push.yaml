# Todo: 
# 1. on push 트리거 main 브랜치로 바꾸기
# 2. argocd가 모니터링할 브랜치 생성
# 3. push origin argocd가 모니터링할 브랜치로 설정


name: Push to ECR
on:
  push:
    branches:
      - frontend

jobs:
  deploy:
    name: Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Dev env variables
        run: |
          echo "Main branch"
          echo "DESTINATION=infra/" >> $GITHUB_ENV     
 
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Git config
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
      - name: Set commit msg 
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: |
          echo "COMMIT_MSG=Push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV
          echo $COMMIT_MSG  

      - name: Check out main repo
        uses: actions/checkout@v3
        with:
          #repository: your/gitops-repository
          #ref: interver-argocd-monitoring
          token: ${{ secrets.GIT_ACCESS_TOKEN }}
          
      - name: chmod repo destination
        run: |
          chmod +x $DESTINATION
          ls
                  
      - name: git push image tag to main branch 
        env:
          GITHUB_REPO: ${{ github.repository.name }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          sed -i -e 's@${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:.*@${{ steps.build-image.outputs.image }}@g' $DESTINATION/interver.yaml
          git add .
          git commit -m "$COMMIT_MSG"
          git push -f --set-upstream origin frontend